all: twsearch.wasm

CXX = ./emsdk/upstream/emscripten/em++
CXXFLAGS = -O3 -fno-exceptions -Wextra -Wall -pedantic -std=c++14 -g -Wsign-compare
FLAGS = -DHAVE_FFSLL -DWASM -DWASMTEST -DASLIBRARY -s TOTAL_MEMORY=1024MB -Isrc -Isrc/cityhash/src
LDFLAGS = 

CSOURCE = src/antipode.cpp src/calcsymm.cpp src/canon.cpp src/cmdlineops.cpp \
   src/filtermoves.cpp src/findalgo.cpp src/generatingset.cpp src/god.cpp \
   src/index.cpp src/parsemoves.cpp src/prunetable.cpp src/puzdef.cpp \
   src/readksolve.cpp src/solve.cpp src/test.cpp src/threads.cpp \
   src/twsearch.cpp src/util.cpp src/workchunks.cpp src/rotations.cpp \
   src/orderedgs.cpp src/wasmapi.cpp src/coset.cpp src/descsets.cpp \
   src/ordertree.cpp src/unrotate.cpp src/shorten.cpp


HSOURCE = src/antipode.h src/calcsymm.h src/canon.h src/cmdlineops.h \
   src/filtermoves.h src/findalgo.h src/generatingset.h src/god.h src/index.h \
   src/parsemoves.h src/prunetable.h src/puzdef.h src/readksolve.h src/solve.h \
   src/test.h src/threads.h src/util.h src/workchunks.h src/rotations.h \
   src/orderedgs.h src/wasmapi.h src/twsearch.h src/coset.h src/descsets.h \
   src/ordertree.h src/unrotate.h src/shorten.h

CITYSRC = src/cityhash/src/city.cc

src/js/generated-wasm-cjs/twsearch.wasm: $(CSOURCE) $(HSOURCE)
	$(CXX) $(CXXFLAGS) $(FLAGS) $(CSOURCE) -o twsearch.js $(CITYSRC) $(LDFLAGS)
	mv twsearch.js ./src/js/generated-wasm-cjs/
	mv twsearch.wasm ./src/js/generated-wasm-cjs/

src/js/generated-wasm-cjs/twsearch.esm-compatible.js: src/js/generated-wasm-cjs/twsearch.wasm
	node ./script/wrap-twsearch.js

.PHONY: install-emscripten
install-emscripten:
	script/install-emscripten

.PHONY: dev
dev: src/js/generated-wasm-cjs/twsearch.esm-compatible.js src/js/generated-wasm-cjs/twsearch.wasm.wrapped.js
	npm run dev

.PHONY: clean-wasm
clean-wasm:
	rm src/js/generated-wasm-cjs/twsearch.*
